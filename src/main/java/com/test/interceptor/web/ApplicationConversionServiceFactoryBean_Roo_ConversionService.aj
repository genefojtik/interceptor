// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.test.interceptor.web;

import com.test.interceptor.domain.Project;
import com.test.interceptor.domain.Story;
import com.test.interceptor.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Project, String> ApplicationConversionServiceFactoryBean.getProjectToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.test.interceptor.domain.Project, java.lang.String>() {
            public String convert(Project project) {
                return new StringBuilder().append(project.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Project> ApplicationConversionServiceFactoryBean.getIdToProjectConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.test.interceptor.domain.Project>() {
            public com.test.interceptor.domain.Project convert(java.lang.Long id) {
                return Project.findProject(id);
            }
        };
    }
    
    public Converter<String, Project> ApplicationConversionServiceFactoryBean.getStringToProjectConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.test.interceptor.domain.Project>() {
            public com.test.interceptor.domain.Project convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Project.class);
            }
        };
    }
    
    public Converter<Story, String> ApplicationConversionServiceFactoryBean.getStoryToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.test.interceptor.domain.Story, java.lang.String>() {
            public String convert(Story story) {
                return new StringBuilder().append(story.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Story> ApplicationConversionServiceFactoryBean.getIdToStoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.test.interceptor.domain.Story>() {
            public com.test.interceptor.domain.Story convert(java.lang.Long id) {
                return Story.findStory(id);
            }
        };
    }
    
    public Converter<String, Story> ApplicationConversionServiceFactoryBean.getStringToStoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.test.interceptor.domain.Story>() {
            public com.test.interceptor.domain.Story convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Story.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getProjectToStringConverter());
        registry.addConverter(getIdToProjectConverter());
        registry.addConverter(getStringToProjectConverter());
        registry.addConverter(getStoryToStringConverter());
        registry.addConverter(getIdToStoryConverter());
        registry.addConverter(getStringToStoryConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
